INCLUDES = ../include -I ../ -I . 
CFLAGS = -g -I $(INCLUDES) -Dwindows
CC = gcc


ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
ARCH_FLAGS = -m64
ODIR = amd64
INST_LIB_DIR=../lib/amd64
INST_EXE_DIR=../bin/amd64
RCFLAGS = --target=pe-x86-64
else
ifndef PROCESSOR_ARCHITEW6432
ARCH_FLAGS = -m32
ODIR = i386
INST_LIB_DIR=../lib/i386
INST_EXE_DIR=../bin/i386
RCFLAGS = --target=pe-i386
else
ARCH_FLAGS = -m64
ODIR = amd64
INST_LIB_DIR=../lib/amd64
INST_EXE_DIR=../bin/amd64
RCFLAGS = --target=pe-x86-64
endif
endif

STATICLIB = libctf.a
DYNAMICLIB = libctf.dll
IMPLIB = libctfdll.a
DEF = libctf.def

OBJS = $(ODIR)/ctf_create.o \
	 $(ODIR)/ctf_decl.o \
	 $(ODIR)/ctf_error.o \
	 $(ODIR)/ctf_hash.o \
	 $(ODIR)/ctf_labels.o \
	 $(ODIR)/ctf_lib.o \
	 $(ODIR)/ctf_lookup.o \
	 $(ODIR)/ctf_open.o \
	 $(ODIR)/ctf_subr.o \
	 $(ODIR)/ctf_types.o \
	 $(ODIR)/ctf_util.o 

all: $(INST_LIB_DIR)/$(STATICLIB)

$(INST_LIB_DIR)/$(STATICLIB): $(OBJS)
	rm -f $@
	ar rc $(RCFLAGS) $@ $(OBJS)
	ranlib $@

$(INST_LIB_DIR)/$(IMPLIB): $(INST_LIB_DIR)/$(DYNAMICLIB)

$(INST_EXE_DIR)/$(DYNAMICLIB): $(OBJS) 
	$(CC) $(ARCH_FLAGS) -shared -Wl,--out-implib,$(INST_LIB_DIR)/$(IMPLIB) $(LDFLAGS) \
	-o $@ $(DEF) $(OBJS) 

$(ODIR)/%.o: %.c 
	$(CC) -c $(ARCH_FLAGS) $(CFLAGS) $< -o $@
	
clean:
	rm $(ODIR)/*.o $(INST_LIB_DIR)/$(STATICLIB) $(INST_LIB_DIR)/$(IMPLIB) $(INST_EXE_DIR)/$(DYNAMICLIB)